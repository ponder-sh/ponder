export const LlamaCoreAbi = [
  { inputs: [], stateMutability: "nonpayable", type: "constructor" },
  { inputs: [], name: "BootstrapStrategyNotAuthorized", type: "error" },
  {
    inputs: [
      { internalType: "address", name: "policyholder", type: "address" },
      { internalType: "uint8", name: "role", type: "uint8" },
    ],
    name: "CannotCastWithZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotDisapproveAfterMinExecutionTime",
    type: "error",
  },
  { inputs: [], name: "CannotSetExecutorAsTarget", type: "error" },
  { inputs: [], name: "DuplicateCast", type: "error" },
  {
    inputs: [{ internalType: "bytes", name: "reason", type: "bytes" }],
    name: "FailedActionExecution",
    type: "error",
  },
  { inputs: [], name: "IncorrectMsgValue", type: "error" },
  { inputs: [], name: "InfoHashMismatch", type: "error" },
  {
    inputs: [
      { internalType: "enum ActionState", name: "current", type: "uint8" },
    ],
    name: "InvalidActionState",
    type: "error",
  },
  { inputs: [], name: "InvalidPolicyholder", type: "error" },
  { inputs: [], name: "InvalidSignature", type: "error" },
  {
    inputs: [],
    name: "MinExecutionTimeCannotBeInThePast",
    type: "error",
  },
  { inputs: [], name: "MinExecutionTimeNotReached", type: "error" },
  { inputs: [], name: "NonExistentStrategy", type: "error" },
  { inputs: [], name: "OnlyLlama", type: "error" },
  {
    inputs: [],
    name: "PolicyholderDoesNotHavePermission",
    type: "error",
  },
  { inputs: [], name: "RestrictedAddress", type: "error" },
  { inputs: [], name: "UnauthorizedAccountLogic", type: "error" },
  { inputs: [], name: "UnauthorizedStrategy", type: "error" },
  { inputs: [], name: "UnauthorizedStrategyLogic", type: "error" },
  {
    inputs: [{ internalType: "uint256", name: "n", type: "uint256" }],
    name: "UnsafeCast",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract ILlamaAccount",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract ILlamaAccount",
        name: "accountLogic",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "initializationData",
        type: "bytes",
      },
    ],
    name: "AccountCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract ILlamaAccount",
        name: "accountLogic",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "authorized",
        type: "bool",
      },
    ],
    name: "AccountLogicAuthorizationSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "ActionCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "role",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "contract ILlamaStrategy",
        name: "strategy",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "ActionCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract ILlamaStrategy",
        name: "strategy",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    name: "ActionExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "contract ILlamaActionGuard",
        name: "actionGuard",
        type: "address",
      },
    ],
    name: "ActionGuardSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract ILlamaStrategy",
        name: "strategy",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minExecutionTime",
        type: "uint256",
      },
    ],
    name: "ActionQueued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "policyholder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "role",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "ApprovalCast",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "policyholder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "role",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "DisapprovalCast",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "script",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "authorized",
        type: "bool",
      },
    ],
    name: "ScriptAuthorizationSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract ILlamaStrategy",
        name: "strategy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "authorized",
        type: "bool",
      },
    ],
    name: "StrategyAuthorizationSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract ILlamaStrategy",
        name: "strategy",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract ILlamaStrategy",
        name: "strategyLogic",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "initializationData",
        type: "bytes",
      },
    ],
    name: "StrategyCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract ILlamaStrategy",
        name: "strategyLogic",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "authorized",
        type: "bool",
      },
    ],
    name: "StrategyLogicAuthorizationSet",
    type: "event",
  },
  {
    inputs: [
      { internalType: "address", name: "target", type: "address" },
      { internalType: "bytes4", name: "selector", type: "bytes4" },
    ],
    name: "actionGuard",
    outputs: [
      {
        internalType: "contract ILlamaActionGuard",
        name: "guard",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "actionsCount",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "actionId", type: "uint256" },
      { internalType: "address", name: "policyholder", type: "address" },
    ],
    name: "approvals",
    outputs: [{ internalType: "bool", name: "hasApproved", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ILlamaAccount",
        name: "accountLogic",
        type: "address",
      },
    ],
    name: "authorizedAccountLogics",
    outputs: [{ internalType: "bool", name: "isAuthorized", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "script", type: "address" }],
    name: "authorizedScripts",
    outputs: [{ internalType: "bool", name: "isAuthorized", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ILlamaStrategy",
        name: "strategyLogic",
        type: "address",
      },
    ],
    name: "authorizedStrategyLogics",
    outputs: [{ internalType: "bool", name: "isAuthorized", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "uint256", name: "id", type: "uint256" },
          { internalType: "address", name: "creator", type: "address" },
          { internalType: "uint8", name: "creatorRole", type: "uint8" },
          {
            internalType: "contract ILlamaStrategy",
            name: "strategy",
            type: "address",
          },
          { internalType: "address", name: "target", type: "address" },
          { internalType: "uint256", name: "value", type: "uint256" },
          { internalType: "bytes", name: "data", type: "bytes" },
        ],
        internalType: "struct ActionInfo",
        name: "actionInfo",
        type: "tuple",
      },
    ],
    name: "cancelAction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "policyholder", type: "address" },
      {
        components: [
          { internalType: "uint256", name: "id", type: "uint256" },
          { internalType: "address", name: "creator", type: "address" },
          { internalType: "uint8", name: "creatorRole", type: "uint8" },
          {
            internalType: "contract ILlamaStrategy",
            name: "strategy",
            type: "address",
          },
          { internalType: "address", name: "target", type: "address" },
          { internalType: "uint256", name: "value", type: "uint256" },
          { internalType: "bytes", name: "data", type: "bytes" },
        ],
        internalType: "struct ActionInfo",
        name: "actionInfo",
        type: "tuple",
      },
      { internalType: "uint8", name: "v", type: "uint8" },
      { internalType: "bytes32", name: "r", type: "bytes32" },
      { internalType: "bytes32", name: "s", type: "bytes32" },
    ],
    name: "cancelActionBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint8", name: "role", type: "uint8" },
      {
        components: [
          { internalType: "uint256", name: "id", type: "uint256" },
          { internalType: "address", name: "creator", type: "address" },
          { internalType: "uint8", name: "creatorRole", type: "uint8" },
          {
            internalType: "contract ILlamaStrategy",
            name: "strategy",
            type: "address",
          },
          { internalType: "address", name: "target", type: "address" },
          { internalType: "uint256", name: "value", type: "uint256" },
          { internalType: "bytes", name: "data", type: "bytes" },
        ],
        internalType: "struct ActionInfo",
        name: "actionInfo",
        type: "tuple",
      },
      { internalType: "string", name: "reason", type: "string" },
    ],
    name: "castApproval",
    outputs: [{ internalType: "uint96", name: "", type: "uint96" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "policyholder", type: "address" },
      { internalType: "uint8", name: "role", type: "uint8" },
      {
        components: [
          { internalType: "uint256", name: "id", type: "uint256" },
          { internalType: "address", name: "creator", type: "address" },
          { internalType: "uint8", name: "creatorRole", type: "uint8" },
          {
            internalType: "contract ILlamaStrategy",
            name: "strategy",
            type: "address",
          },
          { internalType: "address", name: "target", type: "address" },
          { internalType: "uint256", name: "value", type: "uint256" },
          { internalType: "bytes", name: "data", type: "bytes" },
        ],
        internalType: "struct ActionInfo",
        name: "actionInfo",
        type: "tuple",
      },
      { internalType: "string", name: "reason", type: "string" },
      { internalType: "uint8", name: "v", type: "uint8" },
      { internalType: "bytes32", name: "r", type: "bytes32" },
      { internalType: "bytes32", name: "s", type: "bytes32" },
    ],
    name: "castApprovalBySig",
    outputs: [{ internalType: "uint96", name: "", type: "uint96" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint8", name: "role", type: "uint8" },
      {
        components: [
          { internalType: "uint256", name: "id", type: "uint256" },
          { internalType: "address", name: "creator", type: "address" },
          { internalType: "uint8", name: "creatorRole", type: "uint8" },
          {
            internalType: "contract ILlamaStrategy",
            name: "strategy",
            type: "address",
          },
          { internalType: "address", name: "target", type: "address" },
          { internalType: "uint256", name: "value", type: "uint256" },
          { internalType: "bytes", name: "data", type: "bytes" },
        ],
        internalType: "struct ActionInfo",
        name: "actionInfo",
        type: "tuple",
      },
      { internalType: "string", name: "reason", type: "string" },
    ],
    name: "castDisapproval",
    outputs: [{ internalType: "uint96", name: "", type: "uint96" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "policyholder", type: "address" },
      { internalType: "uint8", name: "role", type: "uint8" },
      {
        components: [
          { internalType: "uint256", name: "id", type: "uint256" },
          { internalType: "address", name: "creator", type: "address" },
          { internalType: "uint8", name: "creatorRole", type: "uint8" },
          {
            internalType: "contract ILlamaStrategy",
            name: "strategy",
            type: "address",
          },
          { internalType: "address", name: "target", type: "address" },
          { internalType: "uint256", name: "value", type: "uint256" },
          { internalType: "bytes", name: "data", type: "bytes" },
        ],
        internalType: "struct ActionInfo",
        name: "actionInfo",
        type: "tuple",
      },
      { internalType: "string", name: "reason", type: "string" },
      { internalType: "uint8", name: "v", type: "uint8" },
      { internalType: "bytes32", name: "r", type: "bytes32" },
      { internalType: "bytes32", name: "s", type: "bytes32" },
    ],
    name: "castDisapprovalBySig",
    outputs: [{ internalType: "uint96", name: "", type: "uint96" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ILlamaAccount",
        name: "llamaAccountLogic",
        type: "address",
      },
      { internalType: "bytes[]", name: "accountConfigs", type: "bytes[]" },
    ],
    name: "createAccounts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint8", name: "role", type: "uint8" },
      {
        internalType: "contract ILlamaStrategy",
        name: "strategy",
        type: "address",
      },
      { internalType: "address", name: "target", type: "address" },
      { internalType: "uint256", name: "value", type: "uint256" },
      { internalType: "bytes", name: "data", type: "bytes" },
      { internalType: "string", name: "description", type: "string" },
    ],
    name: "createAction",
    outputs: [{ internalType: "uint256", name: "actionId", type: "uint256" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "policyholder", type: "address" },
      { internalType: "uint8", name: "role", type: "uint8" },
      {
        internalType: "contract ILlamaStrategy",
        name: "strategy",
        type: "address",
      },
      { internalType: "address", name: "target", type: "address" },
      { internalType: "uint256", name: "value", type: "uint256" },
      { internalType: "bytes", name: "data", type: "bytes" },
      { internalType: "string", name: "description", type: "string" },
      { internalType: "uint8", name: "v", type: "uint8" },
      { internalType: "bytes32", name: "r", type: "bytes32" },
      { internalType: "bytes32", name: "s", type: "bytes32" },
    ],
    name: "createActionBySig",
    outputs: [{ internalType: "uint256", name: "actionId", type: "uint256" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ILlamaStrategy",
        name: "llamaStrategyLogic",
        type: "address",
      },
      {
        internalType: "bytes[]",
        name: "strategyConfigs",
        type: "bytes[]",
      },
    ],
    name: "createStrategies",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "actionId", type: "uint256" },
      { internalType: "address", name: "policyholder", type: "address" },
    ],
    name: "disapprovals",
    outputs: [{ internalType: "bool", name: "hasDisapproved", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "uint256", name: "id", type: "uint256" },
          { internalType: "address", name: "creator", type: "address" },
          { internalType: "uint8", name: "creatorRole", type: "uint8" },
          {
            internalType: "contract ILlamaStrategy",
            name: "strategy",
            type: "address",
          },
          { internalType: "address", name: "target", type: "address" },
          { internalType: "uint256", name: "value", type: "uint256" },
          { internalType: "bytes", name: "data", type: "bytes" },
        ],
        internalType: "struct ActionInfo",
        name: "actionInfo",
        type: "tuple",
      },
    ],
    name: "executeAction",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "executor",
    outputs: [
      {
        internalType: "contract LlamaExecutor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "actionId", type: "uint256" }],
    name: "getAction",
    outputs: [
      {
        components: [
          { internalType: "bytes32", name: "infoHash", type: "bytes32" },
          { internalType: "bool", name: "executed", type: "bool" },
          { internalType: "bool", name: "canceled", type: "bool" },
          { internalType: "bool", name: "isScript", type: "bool" },
          {
            internalType: "contract ILlamaActionGuard",
            name: "guard",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "creationTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "minExecutionTime",
            type: "uint64",
          },
          {
            internalType: "uint96",
            name: "totalApprovals",
            type: "uint96",
          },
          {
            internalType: "uint96",
            name: "totalDisapprovals",
            type: "uint96",
          },
        ],
        internalType: "struct Action",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "uint256", name: "id", type: "uint256" },
          { internalType: "address", name: "creator", type: "address" },
          { internalType: "uint8", name: "creatorRole", type: "uint8" },
          {
            internalType: "contract ILlamaStrategy",
            name: "strategy",
            type: "address",
          },
          { internalType: "address", name: "target", type: "address" },
          { internalType: "uint256", name: "value", type: "uint256" },
          { internalType: "bytes", name: "data", type: "bytes" },
        ],
        internalType: "struct ActionInfo",
        name: "actionInfo",
        type: "tuple",
      },
    ],
    name: "getActionState",
    outputs: [{ internalType: "enum ActionState", name: "", type: "uint8" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes4", name: "selector", type: "bytes4" }],
    name: "incrementNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "string", name: "name", type: "string" },
          {
            internalType: "contract ILlamaStrategy",
            name: "strategyLogic",
            type: "address",
          },
          {
            internalType: "contract ILlamaAccount",
            name: "accountLogic",
            type: "address",
          },
          {
            internalType: "bytes[]",
            name: "initialStrategies",
            type: "bytes[]",
          },
          {
            internalType: "bytes[]",
            name: "initialAccounts",
            type: "bytes[]",
          },
          {
            components: [
              {
                internalType: "RoleDescription[]",
                name: "roleDescriptions",
                type: "bytes32[]",
              },
              {
                components: [
                  { internalType: "uint8", name: "role", type: "uint8" },
                  {
                    internalType: "address",
                    name: "policyholder",
                    type: "address",
                  },
                  {
                    internalType: "uint96",
                    name: "quantity",
                    type: "uint96",
                  },
                  {
                    internalType: "uint64",
                    name: "expiration",
                    type: "uint64",
                  },
                ],
                internalType: "struct RoleHolderData[]",
                name: "roleHolders",
                type: "tuple[]",
              },
              {
                components: [
                  { internalType: "uint8", name: "role", type: "uint8" },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "target",
                        type: "address",
                      },
                      {
                        internalType: "bytes4",
                        name: "selector",
                        type: "bytes4",
                      },
                      {
                        internalType: "contract ILlamaStrategy",
                        name: "strategy",
                        type: "address",
                      },
                    ],
                    internalType: "struct PermissionData",
                    name: "permissionData",
                    type: "tuple",
                  },
                  {
                    internalType: "bool",
                    name: "hasPermission",
                    type: "bool",
                  },
                ],
                internalType: "struct RolePermissionData[]",
                name: "rolePermissions",
                type: "tuple[]",
              },
              { internalType: "string", name: "color", type: "string" },
              { internalType: "string", name: "logo", type: "string" },
            ],
            internalType: "struct LlamaPolicyConfig",
            name: "policyConfig",
            type: "tuple",
          },
        ],
        internalType: "struct LlamaInstanceConfig",
        name: "config",
        type: "tuple",
      },
      {
        internalType: "contract LlamaPolicy",
        name: "policyLogic",
        type: "address",
      },
      {
        internalType: "contract ILlamaPolicyMetadata",
        name: "policyMetadataLogic",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "policyholder", type: "address" },
      { internalType: "bytes4", name: "selector", type: "bytes4" },
    ],
    name: "nonces",
    outputs: [
      { internalType: "uint256", name: "currentNonce", type: "uint256" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "policy",
    outputs: [
      { internalType: "contract LlamaPolicy", name: "", type: "address" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "uint256", name: "id", type: "uint256" },
          { internalType: "address", name: "creator", type: "address" },
          { internalType: "uint8", name: "creatorRole", type: "uint8" },
          {
            internalType: "contract ILlamaStrategy",
            name: "strategy",
            type: "address",
          },
          { internalType: "address", name: "target", type: "address" },
          { internalType: "uint256", name: "value", type: "uint256" },
          { internalType: "bytes", name: "data", type: "bytes" },
        ],
        internalType: "struct ActionInfo",
        name: "actionInfo",
        type: "tuple",
      },
    ],
    name: "queueAction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ILlamaAccount",
        name: "accountLogic",
        type: "address",
      },
      { internalType: "bool", name: "authorized", type: "bool" },
    ],
    name: "setAccountLogicAuthorization",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "target", type: "address" },
      { internalType: "bytes4", name: "selector", type: "bytes4" },
      {
        internalType: "contract ILlamaActionGuard",
        name: "guard",
        type: "address",
      },
    ],
    name: "setGuard",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "script", type: "address" },
      { internalType: "bool", name: "authorized", type: "bool" },
    ],
    name: "setScriptAuthorization",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ILlamaStrategy",
        name: "strategy",
        type: "address",
      },
      { internalType: "bool", name: "authorized", type: "bool" },
    ],
    name: "setStrategyAuthorization",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ILlamaStrategy",
        name: "strategyLogic",
        type: "address",
      },
      { internalType: "bool", name: "authorized", type: "bool" },
    ],
    name: "setStrategyLogicAuthorization",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ILlamaStrategy",
        name: "strategy",
        type: "address",
      },
    ],
    name: "strategies",
    outputs: [
      { internalType: "bool", name: "deployed", type: "bool" },
      { internalType: "bool", name: "authorized", type: "bool" },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;
