name: Bench

on:
  pull_request:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  lint:
    name: Bench
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 5s
          --health-retries 10
        ports:
          - 5432:5432
      ipfs:
        image: ipfs/go-ipfs:v0.10.0
        ports:
          - 5001:5001
      graph-node:
        image: graphprotocol/graph-node
        options: >-
          --health-cmd "echo 'Running health check...' && (curl --fail http://localhost:8040 || exit 1)"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 10
        env:
          postgres_host: postgres
          postgres_user: postgres
          postgres_pass: postgres
          postgres_db: postgres
          ipfs: ipfs:5001
          ethereum: mainnet:${{ secrets.ANVIL_FORK_URL }}
          GRAPH_LOG: debug
          GRAPHMAN_LOG: debug
        ports:
          - 8000:8000
          - 8001:8001
          - 8020:8020
          - 8030:8030
          - 8040:8040
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      # - name: Start IPFS node
      #   uses: ibnesayeed/setup-ipfs@master
      #   with:
      #     ipfs_version: 0.10.0
      #     run_daemon: true

      - name: Verify Graph Node connection
        run: |
          echo "${{ toJson(job) }}"
          echo "IPFS logs:"
          docker logs "${{ job.services.ipfs.id }}"
          sleep 5
          echo "Graph Node logs:"
          docker logs "${{ job.services.graph-node.id }}"

      - name: Setup
        uses: ./.github/actions/setup

      - name: Bench
        run: pnpm bench
        env:
          ANVIL_FORK_URL: ${{ secrets.ANVIL_FORK_URL }}
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postgres

      - name: Verify Graph Node connection end
        run: |
          echo "${{ toJson(job) }}"
          echo "IPFS logs:"
          docker logs "${{ job.services.ipfs.id }}"
          echo "Graph Node logs:"
          docker logs "${{ job.services.graph-node.id }}"
